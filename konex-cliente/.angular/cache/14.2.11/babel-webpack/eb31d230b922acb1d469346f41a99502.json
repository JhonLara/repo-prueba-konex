{"ast":null,"code":"import _classCallCheck from \"C:/Repo prueba KONEX/repo-prueba-konex/konex-cliente/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Repo prueba KONEX/repo-prueba-konex/konex-cliente/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Http, Headers, RequestOptions } from \"@angular/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/http\";\nexport var RestService = /*#__PURE__*/(function () {\n  var RestService = /*#__PURE__*/function () {\n    function RestService(http) {\n      _classCallCheck(this, RestService);\n\n      this.http = http;\n    }\n    /**\r\n     *\r\n     **/\n\n\n    _createClass(RestService, [{\n      key: \"queryPostRegular\",\n      value: function queryPostRegular(route, body) {\n        var repos = this.http.post(route, body);\n        return repos;\n      } //Lazy loading\n\n    }, {\n      key: \"queryDeleteRegular\",\n      value: function queryDeleteRegular(route) {\n        var repos = this.http.delete(route);\n        return repos;\n      }\n    }, {\n      key: \"queryGet\",\n      value: function queryGet(route) {\n        var token = localStorage.getItem(\"token\");\n        var headers = new Headers({\n          Authorization: token\n        });\n        var options = new RequestOptions({\n          headers: headers\n        });\n        var repos = this.http.get(route, options);\n        return repos;\n      }\n    }, {\n      key: \"queryPost\",\n      value: function queryPost(route, body) {\n        var token = localStorage.getItem(\"token\");\n        var headers = new Headers({\n          'Content-Type': 'application/json'\n        });\n        var options = new RequestOptions({\n          headers: headers\n        });\n        var repos = this.http.post(route, body, options);\n        return repos;\n      }\n    }, {\n      key: \"queryDelete\",\n      value: function queryDelete(route) {\n        var token = localStorage.getItem(\"token\");\n        var headers = new Headers({\n          Authorization: token\n        });\n        var options = new RequestOptions({\n          headers: headers\n        });\n        var repos = this.http.delete(route, options);\n        return repos;\n      }\n    }, {\n      key: \"queryExternalApi\",\n      value: function queryExternalApi(route) {\n        var repos = this.http.get(route);\n        return repos;\n      }\n    }]);\n\n    return RestService;\n  }();\n\n  RestService.ɵfac = function RestService_Factory(t) {\n    return new (t || RestService)(i0.ɵɵinject(i1.Http));\n  };\n\n  RestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestService,\n    factory: RestService.ɵfac,\n    providedIn: \"root\"\n  });\n  return RestService;\n})();","map":null,"metadata":{},"sourceType":"module"}