{"ast":null,"code":"import _classCallCheck from \"C:/Repo prueba KONEX/repo-prueba-konex/konex-cliente/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Repo prueba KONEX/repo-prueba-konex/konex-cliente/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport swal from \"sweetalert2\";\nimport { RestService } from 'src/app/core/services/rest.service';\n\nvar MostrarFacturaComponent = /*#__PURE__*/function () {\n  function MostrarFacturaComponent(translate, router, service, route) {\n    _classCallCheck(this, MostrarFacturaComponent);\n\n    this.translate = translate;\n    this.router = router;\n    this.service = service;\n    this.route = route;\n    this.editing = false;\n  }\n\n  _createClass(MostrarFacturaComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.id = this.route.snapshot.paramMap.get('id');\n      this.getFactura(this.id);\n    }\n  }, {\n    key: \"getFactura\",\n    value: function getFactura(idPaciente) {\n      var _this = this;\n\n      var url = \"/api/urgencias/facturar-urgencia/\".concat(idPaciente);\n      this.service.queryExternalApi(url).subscribe(function (response) {\n        var result = response.json();\n\n        if (result) {\n          _this.factura = result;\n        } else {\n          console.log('error');\n        }\n      }, function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"confirmVolver\",\n    value: function confirmVolver() {\n      var _this2 = this;\n\n      swal({\n        title: this.translate.instant(\"alerts.confirm\"),\n        text: this.translate.instant(\"alerts.sure_to_volver\"),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: this.translate.instant(\"buttons.yes\"),\n        cancelButtonText: this.translate.instant(\"buttons.cancel\")\n      }).then(function (result) {\n        if (result.value) {\n          _this2.router.navigate([\"/urgencias\"]);\n        }\n      });\n    }\n  }, {\n    key: \"facturar\",\n    value: function facturar(idPaciente) {\n      var _this3 = this;\n\n      swal({\n        title: this.translate.instant(\"alerts.confirm\"),\n        text: this.translate.instant(\"alerts.sure_to_facturar\"),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: this.translate.instant(\"buttons.yes\"),\n        cancelButtonText: this.translate.instant(\"buttons.cancel\")\n      }).then(function (result) {\n        if (result.value) {\n          var url = \"/api/urgencias/eliminar-urgencia/\".concat(idPaciente);\n\n          _this3.service.queryDeleteRegular(url).subscribe(function (response) {\n            var result = response;\n\n            if (result) {\n              _this3.router.navigate([\"/urgencias\"]);\n\n              swal({\n                title: _this3.translate.instant(\"alerts.success\"),\n                text: _this3.translate.instant(\"alerts.factuar_exito\"),\n                type: \"success\",\n                showCancelButton: false,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: _this3.translate.instant(\"buttons.ok\")\n              }).then(function (result) {\n                return false;\n              });\n            } else {\n              swal({\n                title: _this3.translate.instant(\"alerts.error\"),\n                text: _this3.translate.instant(\"alerts.urgencia_doesnt_exist\"),\n                type: \"error\",\n                showCancelButton: false,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: _this3.translate.instant(\"buttons.ok\")\n              }).then(function (result) {\n                return false;\n              });\n            }\n          }, function (err) {\n            console.log(err);\n          });\n        }\n      });\n    }\n    /**\r\n     * Validates whether a field follows the validation rules\r\n     *\r\n     * @param controlName name of the control being evaluated\r\n     * @param validationType type of the validation to be evaluated\r\n     */\n\n  }, {\n    key: \"controlHasError\",\n    value: function controlHasError(controlName, validationType) {\n      var control = this.myForm.controls[controlName];\n\n      if (!control) {\n        return false;\n      }\n\n      var result = control.hasError(validationType) && (control.dirty || control.touched);\n      return result;\n    }\n  }]);\n\n  return MostrarFacturaComponent;\n}();\n\nMostrarFacturaComponent = __decorate([Component({\n  selector: \"app-mostrar-factura\",\n  templateUrl: \"./mostrar-factura.component.html\",\n  styleUrls: [\"./mostrar-factura.component.scss\"]\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof TranslateService !== \"undefined\" && TranslateService) === \"function\" ? _a : Object, Router, RestService, ActivatedRoute])], MostrarFacturaComponent);\nexport { MostrarFacturaComponent };","map":null,"metadata":{},"sourceType":"module"}