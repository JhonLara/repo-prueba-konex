{"ast":null,"code":"import _classCallCheck from \"C:/Repo prueba KONEX/repo-prueba-konex/konex-cliente/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Repo prueba KONEX/repo-prueba-konex/konex-cliente/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _a;\n\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport swal from \"sweetalert2\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { RestService } from 'src/app/core/services/rest.service';\n\nvar CrearUrgenciasComponent = /*#__PURE__*/function () {\n  function CrearUrgenciasComponent(translate, router, service, route) {\n    _classCallCheck(this, CrearUrgenciasComponent);\n\n    this.translate = translate;\n    this.router = router;\n    this.service = service;\n    this.route = route;\n    this.editing = false;\n    this.identificacion = null;\n    this.eps = null;\n    this.nombrePaciente = null;\n    this.fechaIngreso = null;\n  }\n\n  _createClass(CrearUrgenciasComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.identificacion = this.route.snapshot.queryParams[\"identificacion\"];\n      this.nombrePaciente = this.route.snapshot.queryParams[\"nombrePaciente\"];\n      this.fechaIngreso = this.route.snapshot.queryParams[\"fechaIngreso\"];\n      this.eps = this.route.snapshot.queryParams[\"eps\"];\n      this.myForm = new FormGroup({\n        identificacion: new FormControl(\"identificacion\", [Validators.required]),\n        nombrePaciente: new FormControl(\"nombrePaciente\", [Validators.required]),\n        fechaIngreso: new FormControl(\"fechaIngreso\", [Validators.required]),\n        eps: new FormControl(\"eps\", [Validators.required])\n      });\n\n      if (null !== this.identificacion && undefined !== this.identificacion) {\n        this.myForm.controls[\"identificacion\"].setValue(this.identificacion);\n        this.editing = true;\n      }\n\n      this.myForm.controls[\"nombrePaciente\"].setValue(\"\");\n      this.myForm.controls[\"eps\"].setValue(\"\");\n\n      if (null !== this.fechaIngreso && undefined !== this.fechaIngreso) {\n        this.myForm.controls[\"fechaIngreso\"].setValue(this.fechaIngreso);\n      }\n    }\n    /**\r\n     *\r\n     */\n\n  }, {\n    key: \"store\",\n    value: function store() {\n      var _this = this;\n\n      var controls = this.myForm.controls;\n\n      if (this.myForm.invalid) {\n        Object.keys(controls).forEach(function (controlName) {\n          return controls[controlName].markAsTouched();\n        });\n        return;\n      }\n\n      var datosUrgencia = {\n        identificacion: controls[\"identificacion\"].value,\n        nombrePaciente: controls[\"nombrePaciente\"].value,\n        fechaIngreso: controls[\"fechaIngreso\"].value,\n        eps: controls[\"eps\"].value\n      };\n      var url = \"/api/urgencias/agregar-urgencia\";\n      var data = {\n        \"eps\": datosUrgencia.eps,\n        \"fechaIngreso\": datosUrgencia.fechaIngreso,\n        \"idPaciente\": datosUrgencia.identificacion,\n        \"nombrePersona\": datosUrgencia.nombrePaciente\n      };\n      var body = JSON.stringify(data);\n      this.service.queryPost(url, body).subscribe(function (data) {\n        var result = data;\n\n        if (result) {\n          swal({\n            title: _this.translate.instant(\"alerts.success\"),\n            text: _this.translate.instant(\"alerts.stored_urgencia\"),\n            type: \"success\",\n            showCancelButton: false,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: _this.translate.instant(\"buttons.ok\")\n          }).then(function (result) {\n            _this.router.navigate([\"/urgencias\"]);\n          });\n        } else {\n          swal({\n            title: _this.translate.instant(\"alerts.error\"),\n            text: _this.translate.instant(\"alerts.cannot_delete_urgencia\"),\n            type: \"error\",\n            showCancelButton: false,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: _this.translate.instant(\"buttons.ok\")\n          }).then(function (result) {\n            return false;\n          });\n        }\n      }, function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"confirmVolver\",\n    value: function confirmVolver(idPaciente) {\n      var _this2 = this;\n\n      swal({\n        title: this.translate.instant(\"alerts.confirm\"),\n        text: this.translate.instant(\"alerts.sure_to_volver\"),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: this.translate.instant(\"buttons.yes\"),\n        cancelButtonText: this.translate.instant(\"buttons.cancel\")\n      }).then(function (result) {\n        if (result.value) {\n          _this2.router.navigate([\"/urgencias\"]);\n        }\n      });\n    }\n    /**\r\n     * Validates whether a field follows the validation rules\r\n     *\r\n     * @param controlName name of the control being evaluated\r\n     * @param validationType type of the validation to be evaluated\r\n     */\n\n  }, {\n    key: \"controlHasError\",\n    value: function controlHasError(controlName, validationType) {\n      var control = this.myForm.controls[controlName];\n\n      if (!control) {\n        return false;\n      }\n\n      var result = control.hasError(validationType) && (control.dirty || control.touched);\n      return result;\n    }\n  }]);\n\n  return CrearUrgenciasComponent;\n}();\n\nCrearUrgenciasComponent = __decorate([Component({\n  selector: \"app-create-urgencias\",\n  templateUrl: \"./crear-urgencias.component.html\",\n  styleUrls: [\"./crear-urgencias.component.scss\"]\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof TranslateService !== \"undefined\" && TranslateService) === \"function\" ? _a : Object, Router, RestService, ActivatedRoute])], CrearUrgenciasComponent);\nexport { CrearUrgenciasComponent };","map":null,"metadata":{},"sourceType":"module"}